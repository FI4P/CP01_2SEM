import streamlit as st
import pandas as pd
import numpy as np
from scipy import stats
import plotly.graph_objects as go
import plotly.express as px

# Configura√ß√£o do Streamlit
st.set_page_config(page_title="Desmatamento em regi√µes da Amaz√¥nia", page_icon="üå±", layout="wide")   

file_path = "src/data/prodes.csv"

def load_data():
    try:
        df = pd.read_csv(file_path, encoding="ISO-8859-1", delimiter=";")
        return df
    except Exception as e:
        st.error(f"Erro ao carregar os dados: {e}")
        return None

df = load_data()




if df is not None:

        # Header
    st.header("An√°lise Estat√≠stica com Intervalo de Confian√ßa", divider="grey")

    # Interface de sele√ß√£o
    estado_selecionado = st.selectbox("Selecione um estado para a an√°lise estat√≠stica:", df.columns[1:-1])

    # Estat√≠sticas gerais
    media_total = df["area_total_desmatamento"].mean()
    desvio_total = df["area_total_desmatamento"].std()
    n = df.shape[0]
    z = stats.norm.ppf(0.975)

    ic_menor_total = media_total - z * (desvio_total / np.sqrt(n))
    ic_maior_total = media_total + z * (desvio_total / np.sqrt(n))

    media_estado = df[estado_selecionado].mean()
    desvio_estado = df[estado_selecionado].std()
    ic_menor_estado = media_estado - z * (desvio_estado / np.sqrt(n))
    ic_maior_estado = media_estado + z * (desvio_estado / np.sqrt(n))

    media_prop = df[estado_selecionado] / df["area_total_desmatamento"]
    media_prop_mean = media_prop.mean()
    media_prop_std = media_prop.std()
    ic_prop = stats.t.interval(0.95, df=n-1, loc=media_prop_mean, scale=media_prop_std / np.sqrt(n))

    # Gr√°ficos
    fig_total = go.Figure()
    fig_total.add_trace(go.Scatter(x=df["referencia"], y=df["area_total_desmatamento"],
                                mode="lines+markers", name="√Årea desmatada total"))
    fig_total.add_trace(go.Scatter(x=df["referencia"], y=[ic_maior_total]*n, fill=None,
                                mode='lines', line_color='lightgray', showlegend=False))
    fig_total.add_trace(go.Scatter(x=df["referencia"], y=[ic_menor_total]*n, fill='tonexty',
                                mode='lines', line_color='lightgray', name='IC 95% da m√©dia total'))
    fig_total.update_layout(title="Distribui√ß√£o da √°rea total desmatada com IC 95%",
                        xaxis_title="Ano", yaxis_title="√Årea total desmatada (km¬≤)")

    fig_estado = go.Figure()
    fig_estado.add_trace(go.Scatter(x=df["referencia"], y=df[estado_selecionado],
                                    mode="lines+markers", name=f"{estado_selecionado.capitalize()}"))
    fig_estado.add_trace(go.Scatter(x=df["referencia"], y=[ic_maior_estado]*n, fill=None,
                                    mode='lines', line_color='lightgray', showlegend=False))
    fig_estado.add_trace(go.Scatter(x=df["referencia"], y=[ic_menor_estado]*n, fill='tonexty',
                                    mode='lines', line_color='lightgray', name=f'IC 95% - {estado_selecionado.capitalize()}'))
    fig_estado.update_layout(title=f"Distribui√ß√£o da √°rea desmatada no estado de {estado_selecionado.capitalize()} com IC 95%",
                            xaxis_title="Ano", yaxis_title="√Årea desmatada (km¬≤)")

    fig_bar = px.bar(df, x="referencia", y=estado_selecionado,
                    title=f"Desmatamento no estado de {estado_selecionado.capitalize()} com margem de erro (aproximada)",
                    labels={"referencia": "Ano", estado_selecionado: f"√Årea desmatada ({estado_selecionado}) (km¬≤)"},
                    error_y=media_prop_std * df[estado_selecionado] / df["area_total_desmatamento"])

    # Texto explicativo
    st.markdown("""
    Nesta an√°lise optamos por trabalhar com **m√©dia** e **propor√ß√£o** porque s√£o medidas robustas para descrever a tend√™ncia central e a participa√ß√£o relativa de cada estado no desmatamento total.  
    A **m√©dia** permite resumir a √°rea desmatada ao longo dos anos de forma objetiva, enquanto a **propor√ß√£o** nos mostra a import√¢ncia relativa de um estado espec√≠fico.
    """)

    # IC da m√©dia total
    st.markdown(f"""
    **M√©dia geral da √°rea total desmatada:** {media_total:,.2f} km¬≤  
    **Intervalo de confian√ßa (95%) da m√©dia:** de {ic_menor_total:,.2f} a {ic_maior_total:,.2f} km¬≤
    """, unsafe_allow_html=False)

    st.markdown(r"""
    $$
    IC = \bar{x} \pm Z_{0.975} \cdot \frac{s}{\sqrt{n}}
    $$
    """, unsafe_allow_html=False)

    st.markdown("""
    Onde: $ \\bar{x} $ √© a m√©dia amostral, $ s $ √© o desvio padr√£o amostral e $ n $ √© o tamanho da amostra.
    """, unsafe_allow_html=False)

    st.plotly_chart(fig_total, use_container_width=True)

    # üîé Interpreta√ß√£o do gr√°fico total
    st.markdown("""
    **üîé Interpreta√ß√£o do gr√°fico acima:**  
    O gr√°fico apresenta a evolu√ß√£o da **√°rea total desmatada na Amaz√¥nia Legal ao longo dos anos**.  
    As linhas cinzas representam os limites superior e inferior do **intervalo de confian√ßa de 95% da m√©dia total**.  
    Valores fora desses limites indicam poss√≠veis **anos at√≠picos** que merecem aten√ß√£o, podendo refletir altera√ß√µes em pol√≠ticas p√∫blicas ou eventos clim√°ticos extremos.
    """)

    # IC da m√©dia do estado
    st.markdown(f"""
    **M√©dia do estado de {estado_selecionado.capitalize()}:** {media_estado:,.2f} km¬≤  
    **Intervalo de confian√ßa (95%) da m√©dia:** de {ic_menor_estado:,.2f} a {ic_maior_estado:,.2f} km¬≤
    """, unsafe_allow_html=False)

    st.markdown(r"""
    $$
    IC = \bar{x} \pm Z_{0.975} \cdot \frac{s}{\sqrt{n}}
    $$
    """, unsafe_allow_html=False)

    st.plotly_chart(fig_estado, use_container_width=True)

    # üîé Interpreta√ß√£o do gr√°fico do estado
    st.markdown(f"""
    **üîé Interpreta√ß√£o do gr√°fico acima (Estado: {estado_selecionado.capitalize()}):**  
    Este gr√°fico mostra a s√©rie temporal da **√°rea desmatada especificamente no estado de {estado_selecionado.capitalize()}**.  
    As faixas de intervalo de confian√ßa ajudam a entender o quanto os dados de cada ano est√£o pr√≥ximos ou distantes da m√©dia estimada, evidenciando **picos ou quedas incomuns**.
    """)

    # IC da propor√ß√£o do estado
    st.markdown(f"""
    **Propor√ß√£o m√©dia do estado de {estado_selecionado.capitalize()}:** {media_prop_mean:.4f}  
    **Intervalo de confian√ßa (95%) da propor√ß√£o:** de {ic_prop[0]:.4f} a {ic_prop[1]:.4f}
    """, unsafe_allow_html=False)

    st.markdown(r"""
    $$
    IC = \hat{p} \pm t_{\alpha/2, \, n-1} \cdot \frac{s}{\sqrt{n}}
    $$
    """, unsafe_allow_html=False)

    st.markdown("""
    Onde $ \hat{p} $ √© a propor√ß√£o m√©dia, $ s $ o desvio padr√£o da propor√ß√£o e $ n $ o n√∫mero de observa√ß√µes.  
    A an√°lise mostra a relev√¢ncia estat√≠stica da participa√ß√£o de cada estado no desmatamento da Amaz√¥nia.
    """, unsafe_allow_html=False)

    st.plotly_chart(fig_bar, use_container_width=True)

    # üîé Interpreta√ß√£o do gr√°fico de propor√ß√£o
    st.markdown(f"""
    **üîé Interpreta√ß√£o do gr√°fico acima (Propor√ß√£o do estado de {estado_selecionado.capitalize()}):**  
    Este gr√°fico permite visualizar como o estado de {estado_selecionado.capitalize()} contribuiu para o total de desmatamento ano a ano.  
    A margem de erro indica a variabilidade esperada, e valores fora dessa faixa sugerem **participa√ß√µes acima ou abaixo do esperado**, sendo √∫til para planejar **a√ß√µes de fiscaliza√ß√£o ou pol√≠ticas ambientais regionais**.
    """)
else:
    st.error("Erro ao carregar dados")